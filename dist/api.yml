openapi: 3.0.0
info:
  title: api
  description: API for  project
  version: 1.0.0
tags:
  - name: Users
  - name: Auth
  - name: league
  - name: Players
  - name: Coaches
  - name: Teams
  - name: matches
  - name: referees
  - name: search
paths:
  /Register:
    post:
      tags:
        - Auth
      summary: Add new user
      description: A new user from the client is added to the server
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
      responses:
        "201":
          description: A new user has been added
        "400":
          description: wrong input parameters
  /Login:
    post:
      tags:
        - Auth
      summary: Login an exist user
      description: An exist user login to the system
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginScheme"
      responses:
        "200":
          description: >
            User was found in the DB and authenitcated successfully.
            The session ID is returned in a cookie named `session`. 
            You should include this cookie in subsequent requests
          # headers:
          #   Set-Cookie:
          #     schema:
          #       type: string
          #       example: session=87s97sdhgf279293f8w0e9
            # Note that the Set-Cookie header and securitySchemes are not connected in any way, and the Set-Header definition is for documentation purposes only.
        "401":
          description: Authentication failed
  /logout:
    post:
      tags:
        - Auth
      summary: logout a user from the system and delete his cookie
      responses:
        "200":
          description: "the user has ben successfully logged out"
  /league/getDetails:
    get:
      tags:
        - league
      summary: Return the details about the current league
      responses:
        "200":
          description: data about the current league returned. includes league name, league current season name, league current stage name,
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/league"
        "400":
          description: wrong input parameters
  /players/{playerId}:
    get:
      summary: get all details about a player
      description: useful for player's page
      tags:
        - Players
      parameters:
        - in: path
          name: playerId
          description: player's id
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: data about the player
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Player"
        "404":
          description: playerId does not exist
  /players/getPreview/{playerId}:
    get:
      summary: get the preview details of a player
      description: useful for player search
      tags:
        - Players
      parameters:
        - in: path
          name: playerId
          description: player's id
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: preview data about the player
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PlayerPreview"
        "404":
          description: playerId does not exist
  /users/favoritePlayers:
    get:
      tags:
        - Users
        - Players
      summary: Return the favorite players that were saved by user
      responses:
        "200":
          description: players results
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/PlayerPreview"
        "401":
          description: user is not authorized
    post:
      summary: save player in the favorites list of a user
      tags:
        - Users
        - Players
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                playerId:
                  type: integer
                  description: player's id which the user saved
                  example: 85
      responses:
        "201":
          description: The player successfully saved as favorite
        "401":
          description: user is not authorized
  /users/favoriteMatches:
    get:
      tags:
        - Users
        - matches
      summary: Return the favorite matches that were saved by user
      responses:
        "200":
          description: data about the user's favorites matches returned
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/FutureMatch"
        "401":
          description: user is not authorized
    post:
      summary: save match in the favorites list of a user
      tags:
        - Users
        - matches
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                matchId:
                  type: integer
                  description: matches's id which the user saved
                  example: 33
      responses:
        "201":
          description: The match successfully saved as favorite
        "401":
          description: user is not authorized
  /users/UpTo3favoriteMatches:
    get:
      tags:
        - Users
        - matches
      summary: Returns up to 3 favorites matches that were saved by the logged-in user
      parameters:
      responses:
        "200":
          description: data about the user's 3 favorites matches returned
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/PastMatch"
        "401":
          description: user is not authorized
  /users/favoriteTeams:
    get:
      tags:
        - Users
        - Teams
      summary: Return the favorite teams that were saved by user
      responses:
        "200":
          description: data about the user's favorites teams returned
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Team"
        "401":
          description: user is not authorized
    post:
      summary: save team in the favorites list of a user
      tags:
        - Users
        - Teams
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                teamId:
                  type: integer
                  description: team's id which the user saved
                  example: 33
      responses:
        "201":
          description: The match successfully saved as favorite
        "401":
          description: user is not authorized
  /coaches/{coachId}:
    get:
      summary: get all details about a coach
      description: useful for coach page
      tags:
        - Coaches
      parameters:
        - in: path
          name: coachId
          description: coach's id
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: data about the coach
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Coach"
        "404":
          description: coachId does not exist
  /coaches/getPreview/{coachId}:
    get:
      summary: get the preview details of a coach
      description: useful for coach search
      tags:
        - Coaches
      parameters:
        - in: path
          name: coachId
          description: coach's id
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: preview data about the coach
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CoachPreview"
        "404":
          description: coachId does not exist
  /teams/teamFullDetails/{teamId}:
    get:
      summary: get full deatils about a team
      description: useful for team page
      tags:
        - Teams
      parameters:
        - in: path
          name: teamId
          description: team's id
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: data about the team
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Team"
        "404":
          description: teamId does not exists
  /matches/addMatch:
    post:
      summary: add a match to MATCHES table by body params
      description: adding matches
      tags:
        - matches
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FutureMatch"
      responses:
        "200":
          description: Succesfully added this match
        "404":
          description: Could not add this match due to an error
  /matches/addResult:
    post:
      summary: add a result to a match by body params
      description: adding results to matches
      tags:
        - matches
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                match_id:
                  type: integer
                  description: the match id to add result to
                  example: 23
                match_result:
                  type: string
                  description: the result to add to the match
                  example: 3-2
      responses:
        "200":
          description: Succesfully added result to the match
        "404":
          description: Could not add result to this match due to an error
  /matches/addEventCalendar:
    post:
      summary: add an event calendar to a match by body params
      description: adding event calendars to matches
      tags:
        - matches
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Event"
      responses:
        "200":
          description: Succesfully added event to the match
        "404":
          description: Could not add event to this match due to an error
  /matches/getAllMatches:
    get:
      summary: get all of the matches in the system
      description: returns an array with all the matches in the system
      tags:
        - matches
      responses:
        "200":
          description: Succesfully returned all the matches
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/PastMatch"
        "404":
          description: Could not get matches
  /matches/getAllMatchesSortByDate:
    get:
      summary: get all return all the matches in the system sorted by date
      description: returns an array with all the matches in the system sorted by date
      tags:
        - matches
      responses:
        "200":
          description: Succesfully returned all the matches sorted by date
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/PastMatch"
        "404":
          description: Could not get matches sorted by date
  /matches/getAllMatchesSortByTeam:
    get:
      summary: get all return all the matches in the system sorted by team
      description: returns an array with all the matches in the system sorted by team
      tags:
        - matches
      responses:
        "200":
          description: Succesfully returned all the matches sorted by team
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/PastMatch"
        "404":
          description: Could not get matches sorted by team
  /matches/getPastMatches:
    get:
      summary: get all return all the past matches
      description: returns an array with all the past matches in the system
      tags:
        - matches
      responses:
        "200":
          description: Succesfully returned all the past matches
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/PastMatch"
        "404":
          description: Could not get past matches
  /matches/getFutureMatches:
    get:
      summary: get all return all the future matches
      description: returns an array with all the future matches in the system
      tags:
        - matches
      responses:
        "200":
          description: Succesfully returned all the future matches
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/FutureMatch"
        "404":
          description: Could not get future matches
  /referees/addReferee:
    post:
      summary: add a referee to the Referees table by body params
      description: adding referees to the system
      tags:
        - referees
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                referee_id:
                  type: integer
                  description: the referee id to add
                  example: 23
                fullname:
                  type: string
                  description: the referee's full name to add
                  example: Ben Barnes
      responses:
        "200":
          description: Succesfully added referee to system
        "404":
          description: Could not add referee due to an error
  /search/players/{player_query}:
    get:
      summary: search for players on the system
      description: searching players on the system
      tags:
        - search
        - Players
      parameters:
        - in: path
          name: player_query
          description: player's name
          required: true
          schema:
            type: string
      responses:
        "200":
          description: players results
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PlayerResult"
        "404":
          description: There seems to be a problem searching players
  /search/playersByPos/{player_query}/{position_query}:
    get:
      summary: search for players on the system filter by position
      description: searching players on the system filter by position name
      tags:
        - search
        - Players
      parameters:
        - in: path
          name: player_query
          description: player's name
          required: true
          schema:
            type: string
        - in: path
          name: position_query
          description: position's name
          required: true
          schema:
            type: string
      responses:
        "200":
          description: players results
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PlayerResult"
        "404":
          description: There seems to be a problem searching players
  /search/playersByTeam/{player_query}/{team_query}:
    get:
      summary: search for players on the system filter by team
      description: searching players on the system filter by team name
      tags:
        - search
        - Players
      parameters:
        - in: path
          name: player_query
          description: player's name
          required: true
          schema:
            type: string
        - in: path
          name: team_query
          description: team's name
          required: true
          schema:
            type: string
      responses:
        "200":
          description: players results
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PlayerResult"
        "404":
          description: There seems to be a problem searching players
  /search/teams/{team_query}:
    get:
      summary: search for players on the system
      description: searching players on the system
      tags:
        - search
        - Teams
      parameters:
        - in: path
          name: team_query
          description: team's name
          required: true
          schema:
            type: string
      responses:
        "200":
          description: teams results
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TeamResult"
        "404":
          description: There seems to be a problem searching teams
components:
  schemas:
    User:
      type: object
      description: Model containing user info
      properties:
        username:
          maxLength: 8
          minLength: 3
          type: string
          description: username conatins between 3 to 8 letters only
          example: ladygaga
        firstname:
          type: string
          description: user's first name
          example: Stefani
        lastname:
          type: string
          description: user's last name
          example: Germanotta
        country:
          type: string
          description: user's country
          example: USA
        password:
          maxLength: 10
          minLength: 5
          type: string
          description:
            password conatins between 5 to 10 chars, at least one of them
            is a number and a special char
          format: password
          example: lady@56
        email:
          pattern: email
          type: string
          description: user's email
          example: ladygaga@gmail.com
        image-url:
          pattern: URL
          type: string
          description: URL for the user's image
          example: https://cloudinary.com/
      
    LoginScheme:
      type: object
      properties:
        username:
          type: string
          minLength: 3
          maxLength: 8
          description: username conatins letters only
          example: naorbe
        password:
          type: string
          minLength: 5
          maxLength: 10
          format: password
          description: password conatins at least one number and one special char
          example: naor@55
    league:
      type: object
      properties:
        league_name:
          type: string
          description: league name
          example: Superliga
        current_season_name:
          type: string
          description: current season name
          example: "2020/2021"
        current_stage_name:
          type: string
          description: current stage name
          example: Championship Round
    Player:
      type: object
      properties:
        player_full_name:
          type: string
          description: player name
          example: James Forrest
        player_team:
          type: string
          description: team name
          example: Celtic
        player_image:
          type: string
          description: player's image
          format: URL
          example: https://cdn.sportmonks.com/images/soccer/players/8/172104.png
        player_position:
          type: integer
          description: player's position on the team
        player_common_name:
          type: string
          description: player's common name
          example: J. Forrest
        player_nationality:
          type: string
          description: player's nationality
          example: Scotland
        player_birthdate:
          type: date
          description: player's date of birth
          example: 07/07/1991
        player_height:
          type: string
          description: player's height
          exapmle: 175 cm
        player_weight:
          type: string
          description: player's weight
          example: 71 kg
    PlayerPreview:
      type: object
      properties:
        name:
          type: string
          description: player's name
          example: Sten Michael Grytebust
        image:
          type: string
          description: player's image
          format: URL
          example: https://cdn.sportmonks.com/images/soccer/players/11/84587.png
        position:
          type: string
          description: player's position in team
          example: 1
        team_name:
          type: string
          description: player's team name
          example: København
    PlayerResult:
      type: object
      properties:
        player_id:
          type: string
          description: player's id
          example: 5627
        player_full_name:
          type: string
          description: player name
          example: Mikkel Andersen
        player_team_name:
          type: string
          description: team name
          example: Midtjylland
        player_image:
          type: string
          description: player's image
          format: URL
          example: https://cdn.sportmonks.com/images/soccer/players/27/5627.png
        player_position:
          type: string
          description: player's position on the team
          example: Goalkeeper
    Coach:
      type: object
      properties:
        coach_full_name:
          type: string
          description: coach name
          example: Neil Lennon
        coach_team:
          type: string
          description: team name
          example: Celtic
        coach_image:
          type: string
          description: coach's image
          format: URL
          example: https://cdn.sportmonks.com/images/soccer/players/10/1467946.png
        coach_common_name:
          type: string
          description: coach's common name
          example: N. Lennon
        coach_nationality:
          type: string
          description: coach's nationality
          example: Northern Ireland
        coach_birthdate:
          type: date
          description: coach's date of birth
          example: 25/06/1971
    CoachPreview:
      type: object
      properties:
        coach_full_name:
          type: string
          description: coach name
          example: Neil Lennon
        coach_team:
          type: string
          description: team name
          example: Celtic
        coach_image:
          type: string
          description: coach's image
          format: URL
          example: https://cdn.sportmonks.com/images/soccer/players/10/1467946.png      
    Team:
      type: object
      properties:
        name:
          type: string
          description: team name
          example: København
        players:
          type: array
          items:
            $ref: "#/components/schemas/PlayerPreview"
    TeamResult:
      type: object
      properties:
        team_id:
          type: integer
          description: team's id
          example: 2650
        team_name:
          type: string
          description: team's name
          example: Lyngby
        team_logo:
          type: string
          description: team's logo path
          format: URL
          example: https://cdn.sportmonks.com/images//soccer/teams/26/2650.png
    PastMatch:
      type: object
      properties:
        match:
          type: object
          properties:
            match_id:
              type: integer
              description: the match id to add
              example: 23
            match_date:
              type: date
              description: the date of the match
              example: "2021-04-21"
            match_hour:
              type: dateTime
              description: the date and exact hour of the match
              example: "2021-04-21 21:30:00"
            home_team:
              type: string
              description: 3 letters of the home team
              example: FCB
            away_team:
              type: string
              description: 3 letters of the away team
              example: RMA
            referee_id:
              type: integer
              description: id of the match referee
              example: 2
            stadium:
              type: string
              description: the name of the match's stadium
              example: Santiago Bernabeu
            result:
              type: string
              description: the result of the game, left is home team's score and right is away team's score
              example: 3-2
          match_events:
            type: array
            items:
              $ref: "#/components/schemas/league"
    FutureMatch:
      type: object
      properties:
        match_id:
          type: integer
          description: match's id
          example: 123
        match_date:
          type: dateTime
          description: the date of the match
          example: 25/04/2021
        match_hour:
          type: dateTime
          description: the date and exact hour of the match
          example: 25/04/2021 21:30:00
        home_team:
          type: string
          description: 3 letters of the home team
          example: FCB
        away_team:
          type: string
          description: 3 letters of the away team
          example: RMA
        referee_id:
          type: integer
          description: referee's id
          example: 1
        stadium:
          type: string
          description: the name of the match's stadium
          example: Santiago Bernabeu
    Event:
      type: object
      properties:
        match_id:
          type: integer
          description: the match id to add result to
          example: 23
        event_id:
          type: integer
          description: the event's id to add to the match
          example: 1
        event_date:
          type: date
          description: the event's date to add to the match
          example: "2021-04-21"
        event_hour:
          type: dateTime
          description: the event's date and time to add to the match
          example: "2021-04-21 21:30:00"
        event_minute:
          type: int
          description: the even'ts minute it happened on the match
          example: 67
        event_description:
          type: string
          description: the event's description
          example: goal
